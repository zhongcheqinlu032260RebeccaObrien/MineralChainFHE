/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VeterinaryFHERecordNetwork,
  VeterinaryFHERecordNetworkInterface,
} from "../../contracts/VeterinaryFHERecordNetwork";

const _abi = [
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "uid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "DecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "uid",
        type: "uint256",
      },
    ],
    name: "RecordRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "uid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RecordSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "encryptedRecords",
    outputs: [
      {
        internalType: "uint256",
        name: "uid",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "encryptedSpecies",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedBreed",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedSymptoms",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedOwnerMeta",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
    ],
    name: "getRevealedRecord",
    outputs: [
      {
        internalType: "string",
        name: "species",
        type: "string",
      },
      {
        internalType: "string",
        name: "breed",
        type: "string",
      },
      {
        internalType: "string",
        name: "symptoms",
        type: "string",
      },
      {
        internalType: "bool",
        name: "revealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "handleAggregateDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "handleDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "recordCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "requestAggregateDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
    ],
    name: "requestRecordDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "revealedRecords",
    outputs: [
      {
        internalType: "string",
        name: "species",
        type: "string",
      },
      {
        internalType: "string",
        name: "breed",
        type: "string",
      },
      {
        internalType: "string",
        name: "symptoms",
        type: "string",
      },
      {
        internalType: "bool",
        name: "revealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint32",
        name: "encryptedSpecies",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedBreed",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedSymptoms",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedOwnerMeta",
        type: "bytes32",
      },
    ],
    name: "submitEncryptedMedicalRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610154575f6060610014610158565b828152826020820152826040820152015261002d610158565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970391825416179055604051611b0d908161018c8239f35b5f80fd5b60405190608082016001600160401b0381118382101761017757604052565b634e487b7160e01b5f52604160045260245ffdfe60406080815260049081361015610014575f80fd5b5f3560e01c80630766950714610c895780631c5c777b146108b05780635346b46b1461086057806363a66aaf1461050f5780637599be5d146104f2578063a3c881741461049b578063b8f29c9a1461043f578063ce893ba3146103e1578063da1f12ab146103c55763f09d3d601461008a575f80fd5b3461039b5760208060031936011261039b57823591825f5260019060018352805f2091600284526100c460ff6003845f2001541615611537565b81519067ffffffffffffffff9060a08301828111848210176103b25784528783528786840195608036883760018101546100fd86611576565b52600281015461010c86611597565b52600381015461011b866115a7565b52015483516003101561039f5760808401525f917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009384549660018060a01b03807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b1561039b578851637d6e912360e11b8152808e018c9052905f9082908183816101ad602482018b611a2e565b03925af180156103915761037e575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b1561037a578751633263b83b60e01b8152808d018a9052606060248201529086908290818381610215606482018a611a2e565b630766950760e01b604483015203925af1801561037057908691610358575b508890527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf01808a5287862054610348578886528952868520915192831161033557600160401b831161033557815483835580841061030e575b50908452878420845b8381106102fd5750505050508154905f1982146102ea57507f81bca54e6c48c44ec959a5581796be73005cbde51156a29bae607f52e9baa16c9596506001019055815f526005835284815f205551908152a2005b634e487b7160e01b815260118852602490fd5b825182820155918901918401610296565b82865284848b882092830192015b82811061032a57505061028d565b5f815501859061031c565b634e487b7160e01b855260418b52602485fd5b8751633f06d22b60e01b81528c90fd5b610361906112b7565b61036c57845f610234565b8480fd5b88513d88823e3d90fd5b8580fd5b6103899196506112b7565b5f945f6101bc565b89513d5f823e3d90fd5b5f80fd5b603289634e487b7160e01b5f525260245ffd5b604189634e487b7160e01b5f525260245ffd5b503461039b575f36600319011261039b57602090516127118152f35b50903461039b57602036600319011261039b5760c09181355f526001602052805f20805492600182015492600283015490600560038501549385015494015494815196875260208701528501526060840152608083015260a0820152f35b50903461039b57602036600319011261039b57355f526002602052805f209061049761046a83611495565b9161047760018501611495565b9360ff600361048860028401611495565b9201541691519485948561141a565b0390f35b50903461039b57602036600319011261039b57355f526002602052805f209061049760ff6003840154166104ce84611495565b926104e760026104e060018801611495565b9601611495565b90519485948561141a565b503461039b575f36600319011261039b576020905f549051908152f35b503461039b576020908160031936011261039b5782359167ffffffffffffffff80841161039b573660238501121561039b57610555602494369086818901359101611339565b83519181519284818185019561056c8183896113d4565b8101600381520301902054958615610823578551918683018381108282111761081157875260018084528684019887368b376105a785611576565b525f917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009485549a60018060a01b03807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b1561039b575f8f61062b928f8f908c9385915196879586948593637d6e912360e11b855284015282018b611a2e565b03925af18015610807576107f4575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b1561037a578b51633263b83b60e01b8152808f018e90526060888201529086908290818381610692606482018a611a2e565b635346b46b60e01b604483015203925af180156107ea579086916107d6575b508c90527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf01808b528b8620546107c6578c86528a528a852091519283116107b457600160401b83116107b457815483835580841061078d575b50908452888420845b83811061077c5750505050508254985f198a1461076c575050506001600595969701905561075e8386518093610751838301968792519283916113d4565b81010380845201826112fb565b519020935f52525f20555f80f35b634e487b7160e01b825260119052fd5b825182820155918a01918401610713565b82865284848c882092830192015b8281106107a957505061070a565b5f815501859061079b565b634e487b7160e01b855260418d528585fd5b8b51633f06d22b60e01b81528e90fd5b6107df906112b7565b61036c57845f6106b1565b8c513d88823e3d90fd5b6107ff9196506112b7565b5f945f61063a565b8d513d5f823e3d90fd5b8260418b634e487b7160e01b5f52525ffd5b855162461bcd60e51b81526020818a01818152600f918101919091526e131858995b081b9bdd08199bdd5b99608a1b604082015281906060010390fd5b503461039b5761089161088b6108753661138d565b928195835f9493945260056020525f2054611997565b50611799565b60208180518101031261039b576020015163ffffffff81160361039b57005b503461039b57608036600319011261039b5760245f54916001808401809411610c7757835f5581519260c084019067ffffffffffffffff9185811083821117610c64578452858552602094600586820189358152868301843581526060840160443581526080850191606435835260a08601934285528c5f52898c528a5f20965187555189870155516002860155516003850155518a840155519101558351916080830183811082821117610c525780865261096b816112df565b5f8152835284519361097c856112df565b5f8552868401948552855192610991846112df565b5f845286850193845260608501955f8752895f5260028952875f209551805190858211610be0576109cc826109c68a5461145d565b8a6115b7565b8a90601f8311600114610bf2576109fa92915f9183610adf575b50508160011b915f199060031b1c19161790565b86555b51805186840191858211610be057610a1f82610a19855461145d565b856115b7565b8a90601f8311600114610b8057610a4c92915f9183610adf5750508160011b915f199060031b1c19161790565b90555b600285019351998a51938411610b6f575050610a6f82610a19855461145d565b8690601f8311600114610aea5750816003949392610ac4927f42d1568095930ecee2fb0a282157fca663f9caec9693f7f4247dca38ecc801ea9a9b5f92610adf5750508160011b915f199060031b1c19161790565b90555b019051151560ff8019835416911617905551428152a2005b015190505f806109e6565b9190601f19821699845f52885f209a5f5b818110610b5a5750917f42d1568095930ecee2fb0a282157fca663f9caec9693f7f4247dca38ecc801ea9a9b91846003989796959410610b43575b505050811b019055610ac7565b01515f1983881b60f8161c191690555f8080610b36565b838301518d559b85019b928a01928a01610afb565b604190634e487b7160e01b5f52525ffd5b8592918c91601f198416865f52835f20935f905b828210610bc95750508411610bb1575b505050811b019055610a4f565b01515f1960f88460031b161c191690555f8080610ba4565b8385015186558a979095019493840193018f610b94565b8360418e634e487b7160e01b5f52525ffd5b8592918c91601f1984168b5f52835f20935f905b828210610c3b5750508411610c23575b505050811b0186556109fd565b01515f1960f88460031b161c191690555f8080610c16565b8385015186558a979095019493840193018f610c06565b8260418a634e487b7160e01b5f52525ffd5b50634e487b7160e01b5f90815260418852fd5b82601186634e487b7160e01b5f52525ffd5b503461039b57610c983661138d565b919092815f5260209160058352815f205494851561128257855f52610cd760029586865282600394610cd260ff87895f2001541615611537565b611799565b8051810190848181840193031261039b578481015167ffffffffffffffff9182821161039b570182603f8201121561039b578581015192828411611125578360051b865194610d28898301876112fb565b855286888601918401019282841161039b57878101915b848310611224575050505050610d5482611576565b51875f52868652845f209080519083821161121157610d7782610a19855461145d565b8790601f83116001146111af57610da492915f9183610adf5750508160011b915f199060031b1c19161790565b90555b610db082611597565b5191875f5286865260019283865f20019080519084821161119c57610dd982610a19855461145d565b8890601f8311600114611138579180610e0c92610e139695945f92610adf5750508160011b915f199060031b1c19161790565b90556115a7565b5190875f5286865286855f200191805191821161112557610e3882610a19855461145d565b8690601f83116001146110c857610e6592915f9183610adf5750508160011b915f199060031b1c19161790565b90555b855f52848452610e8d84845f208481018460ff19825416179055855192838092611606565b85815203019020541561104e575b85965f95968652868552610eb785858820865192838092611606565b86815203019020549160018060a01b0390867f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701916044848454169189519b8c938492639cd07acb60e01b8452898401528860248401525af1978815611044575f98611015575b50878415611005575b15610fe7575b915f60649288959454168751998a95869463022f65e760e31b865285015260248401528160448401525af1938415610fdd575f94610fac575b50610f7e9394865f528352815f20915193848093611606565b90815203019020557f05a65d3107432923df58c3a29bb1e272a83245d9eea6a97ef1bce4b2e8b9f99d5f80a2005b93508284813d8311610fd6575b610fc381836112fb565b8101031261039b57610f7e935193610f65565b503d610fb9565b82513d5f823e3d90fd5b96508592915f606492610ff8611a61565b9992949550925050610f2c565b935061100f611a61565b93610f26565b9097508681813d831161103d575b61102d81836112fb565b8101031261039b5751965f610f1d565b503d611023565b86513d5f823e3d90fd5b611056611a61565b865f5285855261106e85855f20865192838092611606565b8681520301902055855f52848452825f208754600160401b8110156103b257808361109b92018a55611686565b6110b6575f969798916110ad916116bb565b96959450610e9b565b5f89634e487b7160e01b82525260245ffd5b849291601f19831691855f52895f20925f5b8b82821061110f57505084116110f8575b505050811b019055610e68565b01515f1983881b60f8161c191690555f80806110eb565b83850151865589979095019493840193016110da565b60418a634e487b7160e01b5f525260245ffd5b9392918691601f19821690845f528b5f20915f5b8d8282106111865750509683610e13981061116f575b505050811b0190556115a7565b01515f19838b1b60f8161c191690555f8080611162565b838a015185558b9690940193928301920161114c565b60418c634e487b7160e01b5f525260245ffd5b90601f19831691845f52895f20925f5b8b8282106111fb5750509084600195949392106111e4575b505050811b019055610da7565b01515f1983891b60f8161c191690555f80806111d7565b60018596829396860151815501950193016111bf565b60418b634e487b7160e01b5f525260245ffd5b825186811161039b57820184605f8201121561039b578981015191606061124a8461131d565b906112578d5192836112fb565b8482528781868601011161039b578d9485946112779286850191016113d4565b815201920191610d3f565b825162461bcd60e51b8152808801859052600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606490fd5b67ffffffffffffffff81116112cb57604052565b634e487b7160e01b5f52604160045260245ffd5b6020810190811067ffffffffffffffff8211176112cb57604052565b90601f8019910116810190811067ffffffffffffffff8211176112cb57604052565b67ffffffffffffffff81116112cb57601f01601f191660200190565b9291926113458261131d565b9161135360405193846112fb565b82948184528183011161039b578281602093845f960137010152565b9080601f8301121561039b5781602061138a93359101611339565b90565b606060031982011261039b576004359167ffffffffffffffff60243581811161039b57836113bd9160040161136f565b9260443591821161039b5761138a9160040161136f565b5f5b8381106113e55750505f910152565b81810151838201526020016113d6565b9060209161140e815180928185528580860191016113d4565b601f01601f1916010190565b92611447606093611439611455949897986080885260808801906113f5565b9086820360208801526113f5565b9084820360408601526113f5565b931515910152565b90600182811c9216801561148b575b602083101461147757565b634e487b7160e01b5f52602260045260245ffd5b91607f169161146c565b9060405191825f82546114a78161145d565b908184526020946001916001811690815f1461151557506001146114d7575b5050506114d5925003836112fb565b565b5f90815285812095935091905b8183106114fd5750506114d593508201015f80806114c6565b855488840185015294850194879450918301916114e4565b925050506114d594925060ff191682840152151560051b8201015f80806114c6565b1561153e57565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b8051156115835760200190565b634e487b7160e01b5f52603260045260245ffd5b8051600110156115835760400190565b8051600210156115835760600190565b601f82116115c457505050565b5f5260205f20906020601f840160051c830193106115fc575b601f0160051c01905b8181106115f1575050565b5f81556001016115e6565b90915081906115dd565b5f929181546116148161145d565b9260019180831690811561166b5750600114611631575b50505050565b9091929394505f5260209060205f20905f915b85831061165a575050505001905f80808061162b565b805485840152918301918101611644565b60ff191684525050508115159091020191505f80808061162b565b6004548110156115835760045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01905f90565b90808214611795576116cd815461145d565b9067ffffffffffffffff82116112cb576116eb82610a19855461145d565b5f90601f83116001146117275761171892915f918361171c5750508160011b915f199060031b1c19161790565b9055565b015490505f806109e6565b90601f198316915f5260209160205f2090855f5260205f20935f905b82821061177c575050908460019594939210611764575b505050811b019055565b01545f1960f88460031b161c191690555f808061175a565b8495819295850154815560018091019601940190611743565b5050565b9190825f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0191602091838352604093845f20541561198657855f528352835f209084518083868295549384815201905f52865f20925f5b8882821061197057505050611808925003836112fb565b80518085019081861161195c57860180911161195c576118a95f8694611857896118bc968151968161184389935180928d80870191016113d4565b8201908a82015203888101875201856112fb565b6118cb60018060a01b037f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497035416948a51988997889687956378542ead60e01b8752606060048801526064870190611a2e565b60031993848783030160248801526113f5565b918483030160448501526113f5565b03925af1918215611952575f9261191b575b50501561190b57507f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d5f80a2565b5163cf6c44e960e01b8152600490fd5b90809250813d831161194b575b61193281836112fb565b8101031261039b5751801515810361039b575f806118dd565b503d611928565b83513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b85548452600195860195889550930192016117f1565b845163d66ca67560e01b8152600490fd5b600454905f5b8281106119db5760405162461bcd60e51b815260206004820152600f60248201526e131858995b081b9bdd08199bdd5b99608a1b6044820152606490fd5b816119e582611686565b50604051611a09816119fb602082018095611606565b03601f1981018352826112fb565b51902014611a195760010161199d565b61138a9250611a289150611686565b50611495565b9081518082526020808093019301915f5b828110611a4d575050505090565b835185529381019392810192600101611a3f565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f600480830182905260248301529091602091839160449183916001600160a01b03165af1908115611af5575f91611ac6575090565b90506020813d602011611aed575b81611ae1602093836112fb565b8101031261039b575190565b3d9150611ad4565b6040513d5f823e3d90fdfea164736f6c6343000818000a";

type VeterinaryFHERecordNetworkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeterinaryFHERecordNetworkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeterinaryFHERecordNetwork__factory extends ContractFactory {
  constructor(...args: VeterinaryFHERecordNetworkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VeterinaryFHERecordNetwork & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): VeterinaryFHERecordNetwork__factory {
    return super.connect(runner) as VeterinaryFHERecordNetwork__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeterinaryFHERecordNetworkInterface {
    return new Interface(_abi) as VeterinaryFHERecordNetworkInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VeterinaryFHERecordNetwork {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as VeterinaryFHERecordNetwork;
  }
}
