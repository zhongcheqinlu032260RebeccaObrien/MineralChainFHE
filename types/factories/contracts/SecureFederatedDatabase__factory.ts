/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SecureFederatedDatabase,
  SecureFederatedDatabaseInterface,
} from "../../contracts/SecureFederatedDatabase";

const _abi = [
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "DecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RecordAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "RecordDecrypted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "euint32",
        name: "encryptedField1",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedField2",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedField3",
        type: "bytes32",
      },
    ],
    name: "addEncryptedRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decryptedRecords",
    outputs: [
      {
        internalType: "string",
        name: "field1",
        type: "string",
      },
      {
        internalType: "string",
        name: "field2",
        type: "string",
      },
      {
        internalType: "string",
        name: "field3",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "encryptedRecords",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "encryptedField1",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedField2",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedField3",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "handleDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "handleFieldCountDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "recordCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "field",
        type: "string",
      },
    ],
    name: "requestFieldCountDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
    ],
    name: "requestRecordDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "recordId",
        type: "uint256",
      },
    ],
    name: "viewDecryptedRecord",
    outputs: [
      {
        internalType: "string",
        name: "field1",
        type: "string",
      },
      {
        internalType: "string",
        name: "field2",
        type: "string",
      },
      {
        internalType: "string",
        name: "field3",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "field",
        type: "string",
      },
    ],
    name: "viewEncryptedFieldCount",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610154575f6060610014610158565b828152826020820152826040820152015261002d610158565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970391825416179055604051611aec908161018c8239f35b5f80fd5b60405190608082016001600160401b0381118382101761017757604052565b634e487b7160e01b5f52604160045260245ffdfe60406080815260049081361015610014575f80fd5b5f3560e01c80630766950714610c4d5780631f198de414610c135780636ad4198614610bc35780637599be5d14610ba6578063897ae39d146107dc578063b10f622c14610784578063c630e10614610471578063ce893ba31461041e578063d69d0915146103c3578063da1f12ab146103a75763f09d3d6014610095575f80fd5b34610390576020908160031936011261039057823591825f526001808252825f2090600283526100ce60ff6003865f2001541615611516565b83519067ffffffffffffffff906080830182811184821017610394578652600383526003858401946060368737600181015461010986611555565b52600281015461011886611576565b52015461012484611586565b525f917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009384549560018060a01b03807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b15610390578a51637d6e912360e11b8152808e018b9052905f9082908183816101a5602482018b611a0d565b03925af1801561038657610373575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b1561036f578951633263b83b60e01b8152808d0189905260606024820152908690829081838161020d606482018a611a0d565b630766950760e01b604483015203925af180156103655790869161034d575b508790527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf018089528986205461033d578786528852888520915192831161032a57600160401b831161032a578154838355808410610303575b50908452868420845b8381106102f25750505050508154905f1982146102df5750918594939160016005940190555f52525f20557f692f7082be436727c1eb360ad57f2116cf8e2d16001837c08adafb7e0fa2f8f95f80a2005b634e487b7160e01b815260118852602490fd5b82518282015591880191840161028e565b82865284848a882092830192015b82811061031f575050610285565b5f8155018590610311565b634e487b7160e01b855260418b52602485fd5b8951633f06d22b60e01b81528c90fd5b6103569061125a565b61036157845f61022c565b8480fd5b8a513d88823e3d90fd5b8580fd5b61037e91965061125a565b5f945f6101b4565b8b513d5f823e3d90fd5b5f80fd5b604189634e487b7160e01b5f525260245ffd5b5034610390575f36600319011261039057602090516127118152f35b50903461039057602036600319011261039057355f526002602052805f209061041a60ff6003840154166103f6846113eb565b9261040f6002610408600188016113eb565b96016113eb565b9051948594856114d3565b0390f35b5090346103905760203660031901126103905760a09181355f526001602052805f208054926001820154926002830154916003840154930154938151958652602086015284015260608301526080820152f35b50346103905761048036611377565b908051825160209182818187019361049981838761148d565b810160038152030190205493841561074757835167ffffffffffffffff8186018181118382101761039457865260018083528583019786368a376104dc84611555565b525f917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009384549960018060a01b03807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b15610390578b51637d6e912360e11b8152808f018c9052905f90829081838161055d602482018b611a0d565b03925af1801561073d5761072a575b507f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b1561036f578a51633263b83b60e01b8152808e018d90526060602482015290869082908183816105c5606482018a611a0d565b63356a0cc360e11b604483015203925af180156107205790869161070c575b508b90527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf01808a528a8620546106fc578b8652895289852091519283116106e957600160401b83116106e95781548383558084106106c2575b50908452878420845b8381106106b15750505050508154905f19821461069e5750600595969750600101905561069083865180936106838383019687925192839161148d565b810103808452018261129e565b519020935f52525f20555f80f35b634e487b7160e01b815260118952602490fd5b825182820155918901918401610646565b82865284848b882092830192015b8281106106de57505061063d565b5f81550185906106d0565b634e487b7160e01b855260418c52602485fd5b8a51633f06d22b60e01b81528d90fd5b6107159061125a565b61036157845f6105e4565b8b513d88823e3d90fd5b61073591965061125a565b5f945f61056c565b8c513d5f823e3d90fd5b835162461bcd60e51b81526020818801818152600f918101919091526e119a595b19081b9bdd08199bdd5b99608a1b604082015281906060010390fd5b50903461039057602036600319011261039057355f526002602052805f209061041a6107af836113eb565b916107bc600185016113eb565b9360ff60036107cd600284016113eb565b920154169151948594856114d3565b50346103905760603660031901126103905760245f54916001808401809411610b9457835f5581519260a084019067ffffffffffffffff9185811083821117610b815784528585526020948786820181358152868301843581526060840190604435825260808501924284528b5f52888b52895f20955186555188860155516002850155516003840155519101558351916080830183811082821117610b6f5780865261088881611282565b5f8152835284519361089985611282565b5f85528684019485528551926108ae84611282565b5f845286850193845260608501955f8752895f5260028952875f209551805190858211610afd576108e9826108e38a546113b3565b8a611596565b8a90601f8311600114610b0f5761091792915f91836109fc575b50508160011b915f199060031b1c19161790565b86555b51805186840191858211610afd5761093c8261093685546113b3565b85611596565b8a90601f8311600114610a9d5761096992915f91836109fc5750508160011b915f199060031b1c19161790565b90555b600285019351998a51938411610a8c57505061098c8261093685546113b3565b8690601f8311600114610a0757508160039493926109e1927f994d2ae9a63407bd73769c2b92e18e641715abcf189c425d8532c3d7254b7f189a9b5f926109fc5750508160011b915f199060031b1c19161790565b90555b019051151560ff8019835416911617905551428152a2005b015190505f80610903565b9190601f19821699845f52885f209a5f5b818110610a775750917f994d2ae9a63407bd73769c2b92e18e641715abcf189c425d8532c3d7254b7f189a9b91846003989796959410610a60575b505050811b0190556109e4565b01515f1983881b60f8161c191690555f8080610a53565b838301518d559b85019b928a01928a01610a18565b604190634e487b7160e01b5f52525ffd5b8592918c91601f198416865f52835f20935f905b828210610ae65750508411610ace575b505050811b01905561096c565b01515f1960f88460031b161c191690555f8080610ac1565b8385015186558a979095019493840193018f610ab1565b8360418e634e487b7160e01b5f52525ffd5b8592918c91601f1984168b5f52835f20935f905b828210610b585750508411610b40575b505050811b01865561091a565b01515f1960f88460031b161c191690555f8080610b33565b8385015186558a979095019493840193018f610b23565b8260418a634e487b7160e01b5f52525ffd5b50634e487b7160e01b5f90815260418852fd5b82601186634e487b7160e01b5f52525ffd5b5034610390575f366003190112610390576020905f549051908152f35b503461039057610bf4610bee610bd836611330565b928195835f9493945260056020525f2054611976565b50611778565b602081805181010312610390576020015163ffffffff81160361039057005b503461039057602090610c3b82610c2936611377565b8184519382858094519384920161148d565b81016003815203019020549051908152f35b503461039057610c5c36611330565b90825f9493945260209160058352835f2054948515611225579082610c8092611778565b80518101908281818401930312610390578281015167ffffffffffffffff91828211610390570182603f82011215610390578381015192828411611050578360051b865194610cd18783018761129e565b855286868601918401019282841161039057878101915b8483106111c7575050505050845f5260028352835f209160039182840190610d1460ff83541615611516565b610d1d83611555565b518051908282116111b457610d3c82610d3689546113b3565b89611596565b8790601f831160011461115257610d6992915f91836109fc5750508160011b915f199060031b1c19161790565b85555b610d7583611576565b51926001938487019080519084821161113f57610d968261093685546113b3565b8990601f83116001146110d3578260029593610dd29593610dcb935f926109fc5750508160011b915f199060031b1c19161790565b9055611586565b5195019480519182116110c057610df382610ded88546113b3565b88611596565b8690601f831160011461106357610e2092915f91836109fc5750508160011b915f199060031b1c19161790565b84555b805460ff19168217905584518481610e3b81876115e5565b858152030190205415610fe9575b8495965f95518581610e5b81886115e5565b86815203019020549160018060a01b0390867f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970191604484845416918c519b8c938492639cd07acb60e01b8452898401528860248401525af1978815610fdf575f98610fb0575b50878415610fa0575b15610f82575b915f60649288959454168a51998a95869463022f65e760e31b865285015260248401528160448401525af1938415610f78575f94610f47575b50610f19939451938480936115e5565b90815203019020557fbb482f86dff527dcd85c38ac443cfab95d3322abcd52645c72adadf99b5daed35f80a2005b93508284813d8311610f71575b610f5e818361129e565b8101031261039057610f19935193610f09565b503d610f54565b85513d5f823e3d90fd5b96508592915f606492610f93611a40565b9992949550925050610ed0565b9350610faa611a40565b93610eca565b9097508681813d8311610fd8575b610fc8818361129e565b810103126103905751965f610ec1565b503d610fbe565b89513d5f823e3d90fd5b610ff1611a40565b85518581610fff81886115e5565b86815203019020558654600160401b81101561105057808261102392018955611665565b61103e5796611035845f97989961169a565b96959450610e49565b5f88634e487b7160e01b82525260245ffd5b604188634e487b7160e01b5f525260245ffd5b849291601f19831691885f52895f20925f5b8b8282106110aa5750508411611093575b505050811b018455610e23565b01515f1983881b60f8161c191690555f8080611086565b8385015186558997909501949384019301611075565b60418a634e487b7160e01b5f525260245ffd5b879291601f19831691855f528c5f20928d5f905b8282106111285750509160029795939185610dd298969410611111575b505050811b019055611586565b01515f19838d1b60f8161c191690555f8080611104565b8385015186558c979095019493840193018e6110e7565b60418d634e487b7160e01b5f525260245ffd5b90601f19831691885f52895f20925f5b8b82821061119e575050908460019594939210611187575b505050811b018555610d6c565b01515f1983891b60f8161c191690555f808061117a565b6001859682939686015181550195019301611162565b60418b634e487b7160e01b5f525260245ffd5b825186811161039057820184605f8201121561039057898101519160606111ed846112c0565b906111fa8d51928361129e565b84825287818686010111610390578b94859461121a92868501910161148d565b815201920191610ce8565b845162461bcd60e51b8152808801859052600f60248201526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606490fd5b67ffffffffffffffff811161126e57604052565b634e487b7160e01b5f52604160045260245ffd5b6020810190811067ffffffffffffffff82111761126e57604052565b90601f8019910116810190811067ffffffffffffffff82111761126e57604052565b67ffffffffffffffff811161126e57601f01601f191660200190565b9291926112e8826112c0565b916112f6604051938461129e565b829481845281830111610390578281602093845f960137010152565b9080601f830112156103905781602061132d933591016112dc565b90565b6060600319820112610390576004359167ffffffffffffffff602435818111610390578361136091600401611312565b926044359182116103905761132d91600401611312565b6020600319820112610390576004359067ffffffffffffffff821161039057806023830112156103905781602461132d936004013591016112dc565b90600182811c921680156113e1575b60208310146113cd57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916113c2565b9060405191825f82546113fd816113b3565b908184526020946001916001811690815f1461146b575060011461142d575b50505061142b9250038361129e565b565b5f90815285812095935091905b81831061145357505061142b93508201015f808061141c565b8554888401850152948501948794509183019161143a565b9250505061142b94925060ff191682840152151560051b8201015f808061141c565b5f5b83811061149e5750505f910152565b818101518382015260200161148f565b906020916114c78151809281855285808601910161148d565b601f01601f1916010190565b926115006060936114f261150e949897986080885260808801906114ae565b9086820360208801526114ae565b9084820360408601526114ae565b931515910152565b1561151d57565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b8051156115625760200190565b634e487b7160e01b5f52603260045260245ffd5b8051600110156115625760400190565b8051600210156115625760600190565b601f82116115a357505050565b5f5260205f20906020601f840160051c830193106115db575b601f0160051c01905b8181106115d0575050565b5f81556001016115c5565b90915081906115bc565b5f929181546115f3816113b3565b9260019180831690811561164a5750600114611610575b50505050565b9091929394505f5260209060205f20905f915b858310611639575050505001905f80808061160a565b805485840152918301918101611623565b60ff191684525050508115159091020191505f80808061160a565b6004548110156115625760045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01905f90565b90808214611774576116ac81546113b3565b9067ffffffffffffffff821161126e576116ca8261093685546113b3565b5f90601f8311600114611706576116f792915f91836116fb5750508160011b915f199060031b1c19161790565b9055565b015490505f80610903565b90601f198316915f5260209160205f2090855f5260205f20935f905b82821061175b575050908460019594939210611743575b505050811b019055565b01545f1960f88460031b161c191690555f8080611739565b8495819295850154815560018091019601940190611722565b5050565b9190825f527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0191602091838352604093845f20541561196557855f528352835f209084518083868295549384815201905f52865f20925f5b8882821061194f575050506117e79250038361129e565b80518085019081861161193b57860180911161193b576118885f86946118368961189b968151968161182289935180928d808701910161148d565b8201908a820152038881018752018561129e565b6118aa60018060a01b037f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497035416948a51988997889687956378542ead60e01b8752606060048801526064870190611a0d565b60031993848783030160248801526114ae565b918483030160448501526114ae565b03925af1918215611931575f926118fa575b5050156118ea57507f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d5f80a2565b5163cf6c44e960e01b8152600490fd5b90809250813d831161192a575b611911818361129e565b8101031261039057518015158103610390575f806118bc565b503d611907565b83513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b85548452600195860195889550930192016117d0565b845163d66ca67560e01b8152600490fd5b600454905f5b8281106119ba5760405162461bcd60e51b815260206004820152600f60248201526e119a595b19081b9bdd08199bdd5b99608a1b6044820152606490fd5b816119c482611665565b506040516119e8816119da6020820180956115e5565b03601f19810183528261129e565b519020146119f85760010161197c565b61132d9250611a079150611665565b506113eb565b9081518082526020808093019301915f5b828110611a2c575050505090565b835185529381019392810192600101611a1e565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f600480830182905260248301529091602091839160449183916001600160a01b03165af1908115611ad4575f91611aa5575090565b90506020813d602011611acc575b81611ac06020938361129e565b81010312610390575190565b3d9150611ab3565b6040513d5f823e3d90fdfea164736f6c6343000818000a";

type SecureFederatedDatabaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecureFederatedDatabaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecureFederatedDatabase__factory extends ContractFactory {
  constructor(...args: SecureFederatedDatabaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SecureFederatedDatabase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SecureFederatedDatabase__factory {
    return super.connect(runner) as SecureFederatedDatabase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecureFederatedDatabaseInterface {
    return new Interface(_abi) as SecureFederatedDatabaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SecureFederatedDatabase {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SecureFederatedDatabase;
  }
}
